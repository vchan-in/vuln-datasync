// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

// Tracking table for generated vulnerability database snapshots
type Export struct {
	ID                 int32              `json:"id"`
	Version            string             `json:"version"`
	Format             string             `json:"format"`
	FilePath           string             `json:"file_path"`
	FileSize           pgtype.Int8        `json:"file_size"`
	Checksum           pgtype.Text        `json:"checksum"`
	VulnerabilityCount pgtype.Int4        `json:"vulnerability_count"`
	Compression        pgtype.Bool        `json:"compression"`
	Status             string             `json:"status"`
	ErrorMessage       pgtype.Text        `json:"error_message"`
	CreatedAt          pgtype.Timestamptz `json:"created_at"`
	CompletedAt        pgtype.Timestamptz `json:"completed_at"`
}

// Background job queue for async processing
type Job struct {
	ID           int32              `json:"id"`
	Type         string             `json:"type"`
	Payload      []byte             `json:"payload"`
	State        string             `json:"state"`
	Queue        string             `json:"queue"`
	Priority     int32              `json:"priority"`
	MaxRetry     int32              `json:"max_retry"`
	Retried      int32              `json:"retried"`
	ErrorMessage pgtype.Text        `json:"error_message"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	ProcessedAt  pgtype.Timestamptz `json:"processed_at"`
	CompletedAt  pgtype.Timestamptz `json:"completed_at"`
}

// Statistics tracking for vulnerability processing operations
type ProcessingStat struct {
	ID             int32              `json:"id"`
	Source         string             `json:"source"`
	ProcessedCount int32              `json:"processed_count"`
	IngestedCount  int32              `json:"ingested_count"`
	UpdatedCount   int32              `json:"updated_count"`
	MergedCount    int32              `json:"merged_count"`
	SkippedCount   int32              `json:"skipped_count"`
	ErrorCount     int32              `json:"error_count"`
	StartTime      pgtype.Timestamptz `json:"start_time"`
	EndTime        pgtype.Timestamptz `json:"end_time"`
	DurationMs     pgtype.Int4        `json:"duration_ms"`
	CreatedAt      pgtype.Timestamptz `json:"created_at"`
}

type RecentProcessing struct {
	Source         string             `json:"source"`
	ProcessedCount int32              `json:"processed_count"`
	IngestedCount  int32              `json:"ingested_count"`
	MergedCount    int32              `json:"merged_count"`
	ErrorCount     int32              `json:"error_count"`
	DurationMs     pgtype.Int4        `json:"duration_ms"`
	StartTime      pgtype.Timestamptz `json:"start_time"`
	EndTime        pgtype.Timestamptz `json:"end_time"`
}

// Main table storing normalized vulnerability data from multiple sources
type Vulnerability struct {
	ID               string             `json:"id"`
	Summary          pgtype.Text        `json:"summary"`
	Details          pgtype.Text        `json:"details"`
	Severity         pgtype.Text        `json:"severity"`
	PublishedAt      pgtype.Timestamptz `json:"published_at"`
	ModifiedAt       pgtype.Timestamptz `json:"modified_at"`
	Ecosystem        pgtype.Text        `json:"ecosystem"`
	PackageName      pgtype.Text        `json:"package_name"`
	AffectedVersions []string           `json:"affected_versions"`
	FixedVersions    []string           `json:"fixed_versions"`
	// Array of vulnerability identifiers (CVE, GHSA, PYSEC, etc.) used for deduplication
	Aliases []string `json:"aliases"`
	Refs    []byte   `json:"refs"`
	// Array tracking data sources, e.g., ["osv", "gitlab"]
	Source []string `json:"source"`
	// Complete original data for audit trail and future processing
	Raw []byte `json:"raw"`
	// Hash of raw data for change detection and deduplication
	DataHash  pgtype.Text        `json:"data_hash"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type VulnerabilityStat struct {
	TotalVulnerabilities int64       `json:"total_vulnerabilities"`
	OsvCount             int64       `json:"osv_count"`
	GitlabCount          int64       `json:"gitlab_count"`
	CveCount             int64       `json:"cve_count"`
	MergedCount          int64       `json:"merged_count"`
	EcosystemCount       int64       `json:"ecosystem_count"`
	PackageCount         int64       `json:"package_count"`
	OldestVulnerability  interface{} `json:"oldest_vulnerability"`
	NewestVulnerability  interface{} `json:"newest_vulnerability"`
	LastUpdated          interface{} `json:"last_updated"`
}
